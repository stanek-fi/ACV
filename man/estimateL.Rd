% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimateL.R
\name{estimateL}
\alias{estimateL}
\title{Estimate loss of a given algorithm}
\usage{
estimateL(
  y,
  algorithm,
  m,
  h = 1,
  v = 1,
  xreg = NULL,
  lossFunction = function(y, yhat) {     (y - yhat)^2 },
  method = "augmented",
  Phi = NULL,
  bw = NULL,
  rhoLimit = 1,
  ...
)
}
\arguments{
\item{y}{Univariate time-series object}

\item{algorithm}{Algorithm which is to be applied to the time-series. The object which the algorithm produces should respond to fitted and forecast methods.
Alternatively in the case of more complex custom algorithms, the algorithm may be a function which takes named arguments ("yInSample", "yOutSample", "h") or ("yInSample", "yOutSample", "h", "xregInSample", "xregOutSample") as inputs and produces list with named elements ("yhatInSample", "yhatOutSample") containing vectors of in-sample and out-of-sample forecast.}

\item{m}{Length of the window on which the algorithm ought to be trained.}

\item{h}{Number of predictions made after single training the algorithm.}

\item{v}{Number of periods by which the estimation window is shifted once the predictions are generated.}

\item{xreg}{Matrix of exogenous regressors supplied to the algorithm (if applicable).}

\item{lossFunction}{Loss function used to compute contrasts (defaults to square loss).}

\item{method}{Can attain values "augmented"  for the improved estimator which optimally utilizes also in-sample contrast or "regular" for the standard loss estimator.}

\item{Phi}{One can also directly supply Phi; the matrix of contrasts produced by tsACV in which case parameters: y, algorithm, m, h, v, xreg, lossFunction are not required.}

\item{bw}{Bandwidth for long run variance estimator. If null, bw is selected according to common rule of thumb (3/4)*n^(1/3).}

\item{...}{Other parameters passed to the algorithm.}
}
\value{
List containing loss estimate and its estimated variance along with some other auxiliary information like matrix of contrasts Phi and optimal weight vector lambda.
}
\description{
Function estimateL estimate loss of a given algorithm on time-series y. By default, it uses the optimal weighting scheme which exploits also in-sample contrasts in order to deliver more precise estimates than regular estimators.
}
\examples{

mn <- 40
y <- rnorm(mn)
m <- 36
h <- 1
v <- 1
algorithm <- function(y) {
  Arima(y, order = c(1, 0, 0))
}
estimateL(y, algorithm, m = m, h = h, v = v)

}
